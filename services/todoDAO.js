// Generated by CoffeeScript 2.0.0-beta7
void function () {
  var getFor, init, Todo, userDAO, vow;
  Todo = require('../public/js/shared/models/Todo');
  userDAO = require('./userDAO');
  vow = require('vow');
  getFor = function (usr) {
    return userDAO.find(usr.username).then(init);
  };
  init = function (user) {
    var def, todoDB;
    def = vow.defer();
    if (!user.todos)
      user.todos = {
        entries: [],
        _idSequence: 0
      };
    todoDB = user.todos;
    def.resolve({
      create: function (todo) {
        todo.id = ++todoDB._idSequence;
        todoDB.entries.push(todo);
        return todo;
      },
      update: function (todo) {
        return this.find(todo.id).then(function (item) {
          var idx, upd;
          idx = todoDB.entries.indexOf(item);
          upd = new Todo(todo.id, todo.title, todo.date, todo.priority, todo.done);
          todoDB.entries[idx] = upd;
          return upd;
        });
      },
      remove: function (todo) {
        return this.find(todo.id).then(function (item) {
          var deleted, idx;
          idx = todoDB.entries.indexOf(item);
          deleted = todoDB.entries.splice(idx, 1);
          return deleted[0];
        });
      },
      list: function () {
        def = vow.defer();
        def.resolve(todoDB.entries);
        return def.promise();
      },
      find: function (id) {
        var item;
        def = vow.defer();
        item = todoDB.entries.filter(function (it) {
          return it.id === id;
        })[0];
        def.resolve(item);
        return def.promise();
      },
      dump: function () {
        return console.dir(todoDB.entries);
      }
    });
    return def.promise();
  };
  module.exports = { getFor: getFor };
}.call(this);

//# sourceMappingURL=todoDAO.js.map
