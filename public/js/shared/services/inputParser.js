// Generated by CoffeeScript 2.0.0-beta7
void function () {
  var inputParser, MS_IN_DAY, pattern;
  pattern = /(\d+)*([dwmy])?.*?(\d+)*$/;
  MS_IN_DAY = 1e3 * 60 * 60 * 24;
  inputParser = {
    parse: function (input) {
      var cache$, date, match, mod, nothing, opts, prior, result, todoDate, tokens;
      result = {
        title: input,
        date: new Date().getTime(),
        priority: 0
      };
      tokens = input.split('  ').filter(function (it) {
        return it !== '  ';
      });
      if (tokens.length > 1) {
        result.title = tokens.shift();
        opts = tokens.join('');
        match = opts.match(pattern);
        if ((null != match ? match.length : void 0) > 0) {
          while (match.length < 4) {
            match.push(null);
          }
          cache$ = match;
          nothing = cache$[0];
          date = cache$[1];
          mod = cache$[2];
          prior = cache$[3];
          if (!mod && !prior)
            prior = date || 0;
          if (prior > 0)
            result.priority = Math.min(parseInt(prior), 10);
          if (prior < 0)
            result.priority = Math.max(0, parseInt(prior));
          todoDate = new Date(result.date);
          switch (mod) {
          case 'd':
            todoDate.setDate(todoDate.getDate() + parseInt(date));
            break;
          case 'w':
            todoDate.setDate(todoDate.getDate() + 7 * parseInt(date));
            break;
          case 'm':
            todoDate.setMonth(todoDate.getMonth() + parseInt(date));
            break;
          case 'y':
            todoDate.setYear(todoDate.getFullYear() + parseInt(date));
          }
          result.date = todoDate.getTime();
        }
      }
      return result;
    },
    decompose: function (todo) {
      var date, days, mod;
      days = Math.round((todo.date - new Date().getTime()) / MS_IN_DAY);
      mod = 'd';
      if (days > 0 && days % 7 === 0 && days < 31) {
        mod = 'w';
        days = days / 7;
      }
      date = days + mod;
      return todo.title + '  ' + date + ' ' + todo.priority;
    }
  };
  if (null != ('undefined' !== typeof module && null != module ? module.exports : void 0)) {
    module.exports = inputParser;
  } else {
    angular.module('app').service('inputParser', function () {
      return inputParser;
    });
  }
}.call(this);

//# sourceMappingURL=inputParser.js.map
